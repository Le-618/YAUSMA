/**
 * YAUSMA Data API - Browser Compatible
 * Converted from ES6 class to browser-compatible JavaScript
 * 
 * The version of the OpenAPI document: 0.1.0
 * 
 * NOTE: This was auto generated by OpenAPI Generator and converted for browser compatibility.
 * https://openapi-generator.tech
 */

/**
 * Data API for handling stock market data requests
 * @param {Object} apiClient - API client instance for making HTTP requests
 */
function DataApi(apiClient) {
    this.apiClient = apiClient || (typeof ApiClient !== 'undefined' ? ApiClient.instance : null);
    
    if (!this.apiClient) {
        throw new Error('DataApi requires an ApiClient instance');
    }
}


/**
 * Callback function to receive the result of the getMarketOverview operation.
 * @param {String} error Error message, if any.
 * @param {Array} data The data returned by the service call.
 * @param {String} response The complete HTTP response.
 */

/**
 * Get market overview data
 * @param {Function} callback The callback function, accepting three arguments: error, data, response
 */
DataApi.prototype.getMarketOverview = function(callback) {
    var debugPrefix = '[YAUSMA-DATAAPI-DEBUG]';
    
    console.log(debugPrefix + ' getMarketOverview called');
    
    var postBody = null;
    var pathParams = {};
    var queryParams = {};
    var headerParams = {};
    var formParams = {};

    console.log(debugPrefix + ' getMarketOverview queryParams:', queryParams);

    var authNames = [];
    var contentTypes = [];
    var accepts = ['application/json'];
    var returnType = 'Array';
    
    // Wrap the callback to add logging
    var wrappedCallback = function(error, data, response) {
        console.log(debugPrefix + ' getMarketOverview callback invoked');
        console.log(debugPrefix + ' getMarketOverview callback error:', error);
        console.log(debugPrefix + ' getMarketOverview callback data:', data);
        console.log(debugPrefix + ' getMarketOverview callback data type:', typeof data);
        if (Array.isArray(data)) {
            console.log(debugPrefix + ' getMarketOverview callback data length:', data.length);
        }
        console.log(debugPrefix + ' getMarketOverview callback response status:', response ? response.status : 'N/A');
        
        // Call the original callback
        if (callback) {
            callback(error, data, response);
        }
    };
    
    console.log(debugPrefix + ' getMarketOverview calling apiClient.callApi...');
    return this.apiClient.callApi(
        '/api/data/market-overview', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, wrappedCallback
    );
};

/**
 * Callback function to receive the result of the getNews operation.
 * @param {String} error Error message, if any.
 * @param {Array} data The data returned by the service call.
 * @param {String} response The complete HTTP response.
 */

/**
 * Get news data
 * @param {Object} opts Optional parameters
 * @param {String} opts.ticker Stock ticker symbol (optional)
 * @param {Function} callback The callback function, accepting three arguments: error, data, response
 */
DataApi.prototype.getNews = function(opts, callback) {
    opts = opts || {};
    var debugPrefix = '[YAUSMA-DATAAPI-DEBUG]';
    
    console.log(debugPrefix + ' getNews called with opts:', opts);
    console.log(debugPrefix + ' getNews ticker parameter:', opts['ticker']);
    
    var postBody = null;
    var pathParams = {};
    var queryParams = {
        'ticker': opts['ticker']
    };
    var headerParams = {};
    var formParams = {};

    console.log(debugPrefix + ' getNews queryParams:', queryParams);

    var authNames = [];
    var contentTypes = [];
    var accepts = ['application/json'];
    var returnType = 'Array';
    
    // Wrap the callback to add logging
    var wrappedCallback = function(error, data, response) {
        console.log(debugPrefix + ' getNews callback invoked');
        console.log(debugPrefix + ' getNews callback error:', error);
        console.log(debugPrefix + ' getNews callback data:', data);
        console.log(debugPrefix + ' getNews callback data type:', typeof data);
        if (Array.isArray(data)) {
            console.log(debugPrefix + ' getNews callback data length:', data.length);
            if (data.length > 0) {
                console.log(debugPrefix + ' getNews callback first item:', data[0]);
                console.log(debugPrefix + ' getNews callback first item type:', typeof data[0]);
                console.log(debugPrefix + ' getNews callback first item constructor:', data[0] && data[0].constructor ? data[0].constructor.name : 'N/A');
            }
        }
        console.log(debugPrefix + ' getNews callback response status:', response ? response.status : 'N/A');
        
        // Call the original callback
        if (callback) {
            callback(error, data, response);
        }
    };
    
    console.log(debugPrefix + ' getNews calling apiClient.callApi...');
    return this.apiClient.callApi(
        '/api/data/news', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, wrappedCallback
    );
};

// Make available globally
if (typeof window !== 'undefined') {
    window.DataApi = DataApi;
}
