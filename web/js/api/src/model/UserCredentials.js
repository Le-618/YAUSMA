/**
 * YAUSMA UserCredentials Model - Browser Compatible
 * Converted from ES6 class to browser-compatible JavaScript
 * 
 * The version of the OpenAPI document: 0.1.0
 * 
 * NOTE: This was auto generated by OpenAPI Generator and converted for browser compatibility.
 * https://openapi-generator.tech
 */

/**
 * Constructs a new UserCredentials.
 * @param {String} email User email address
 * @param {String} passwordHash User password hash
 */
function UserCredentials(email, passwordHash) {
    UserCredentials.initialize(this, email, passwordHash);
}

/**
 * Initializes the fields of this object.
 * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
 * Only for internal use.
 */
UserCredentials.initialize = function(obj, email, passwordHash) {
    obj['email'] = email;
    obj['password_hash'] = passwordHash;
};

/**
 * Constructs a UserCredentials from a plain JavaScript object, optionally creating a new instance.
 * Copies all relevant properties from data to obj if supplied or a new instance if not.
 * @param {Object} data The plain JavaScript object bearing properties of interest.
 * @param {UserCredentials} obj Optional instance to populate.
 * @return {UserCredentials} The populated UserCredentials instance.
 */
UserCredentials.constructFromObject = function(data, obj) {
    if (data) {
        obj = obj || new UserCredentials();

        if (data.hasOwnProperty('email')) {
            obj['email'] = (typeof ApiClient !== 'undefined') ? ApiClient.convertToType(data['email'], 'String') : data['email'];
        }
        if (data.hasOwnProperty('password_hash')) {
            obj['password_hash'] = (typeof ApiClient !== 'undefined') ? ApiClient.convertToType(data['password_hash'], 'String') : data['password_hash'];
        }
    }
    return obj;
};

/**
 * Validates the JSON data with respect to UserCredentials.
 * @param {Object} data The plain JavaScript object bearing properties of interest.
 * @return {boolean} to indicate whether the JSON data is valid with respect to UserCredentials.
 */
UserCredentials.validateJSON = function(data) {
    // check to make sure all required properties are present in the JSON string
    for (var i = 0; i < UserCredentials.RequiredProperties.length; i++) {
        var property = UserCredentials.RequiredProperties[i];
        if (!data.hasOwnProperty(property)) {
            throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
        }
    }
    
    // ensure the json data is a string
    if (data['email'] && !(typeof data['email'] === 'string' || data['email'] instanceof String)) {
        throw new Error("Expected the field `email` to be a primitive type in the JSON string but got " + data['email']);
    }
    // ensure the json data is a string
    if (data['password_hash'] && !(typeof data['password_hash'] === 'string' || data['password_hash'] instanceof String)) {
        throw new Error("Expected the field `password_hash` to be a primitive type in the JSON string but got " + data['password_hash']);
    }

    return true;
};

// Define required properties
UserCredentials.RequiredProperties = ["email", "password_hash"];

/**
 * @member {String} email
 */
UserCredentials.prototype['email'] = undefined;

/**
 * @member {String} password_hash
 */
UserCredentials.prototype['password_hash'] = undefined;

// Make available globally
if (typeof window !== 'undefined') {
    window.UserCredentials = UserCredentials;
}

